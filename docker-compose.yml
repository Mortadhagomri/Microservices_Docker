version: "3.1"

services:
  comments_container:
    container_name: comments_container
    build:
      context: ./Comments
      dockerfile: Dockerfile
    image: commentsimage:v1
    networks:
      - comments_network
      - appnet
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - commentsdb

  commentsdb:
    container_name: commentsdb
    image: mongo
    networks:
      - comments_network
    volumes:
      - commentdb:/data/db
      - commentcfg:/data/configdb

  posts_container:
    container_name: posts_container
    build:
      context: ./Posts
      dockerfile: Dockerfile
    image: postsimage:v1
    networks:
      - appnet
      - posts_network
    restart: always
    ports:
      - "4000:4000"
    depends_on:
      - postsdb

  postsdb:
    container_name: postsdb
    image: mongo
    networks:
      - posts_network
    volumes:
      - postdb:/data/db
      - postcfg:/data/configdb

  users_container:
    container_name: users_container
    build:
      context: ./Users/repartis
      dockerfile: Dockerfile
    image: usersimage:v1
    volumes:
      - usertmp:/tmp
    restart: always
    networks:
      - appnet
      - users_network
    ports:
      - "9000:9000"
    depends_on:
      - postgresdb

  postgresdb:
    container_name: postgresdb
    image: postgres
    networks:
      - users_network
    volumes:
      - postgres_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=repartis

networks:
  users_network:
  posts_network:
  comments_network:
  appnet:

volumes:
  postgres_db:
  usertmp:
  postdb:
  postcfg:
  commentdb:
  commentcfg:
